syntax = "proto3";

package booking_service;

option go_package = "booking_service";

// Services

// Patients
service PatientService {
  rpc CreatePatient(Patient) returns (Patient);
  rpc GetPatient(GetPatientRequest) returns (Patient);
  rpc GetPatients(GetPatientsRequest) returns (Patients);
  rpc UpdatePatient(UpdatePatientRequest) returns (Patient);
  rpc DeletePatient(GetPatientRequest) returns (Status);
}

// Doctor's availability
service DoctorAvailabilityService {
  rpc CreateDoctorAvailability(CreateDoctorAvailabilitys) returns (DoctorAvailability);
  rpc GetDoctorAvailability(GetDoctorAvailabilityById) returns (DoctorAvailability);
  rpc GetDoctorAvailabilityByDoctorId(GetDoctorAvailabilityById) returns (DoctorAvailabilitys);
  rpc UpdateDoctorAvailability(UpdateDoctorAvailabilityById) returns (DoctorAvailability);
  rpc DeleteDoctorAvailability(GetDoctorAvailabilityById) returns (Status);
}

// Booked appointments
service BookedAppointmentService {
  rpc CreateBookedAppointment(CreateBookedAppointments) returns (BookedAppointment);
  rpc GetBookedAppointment(GetRequest) returns (BookedAppointment);
  rpc GetBookedAppointmentsByPatientID(GetRequest) returns (GetBookedAppointments);
  rpc GetBookedAppointmentsByDoctorID(GetRequest) returns (GetBookedAppointments);
  rpc UpdateBookedAppointment(UpdateBookedAppointmentRequest) returns (BookedAppointment);
  rpc UpdatePatientStatusByToken(UpdRequest) returns (GetBookedAppointments);
  rpc DeleteBookedAppointment(GetRequest) returns (Status);
}

// Patient payment
service PatientPaymentService {
  rpc MakePayment(PatientPayment) returns (PatientPayment);
  rpc GetPayment(GetPaymentReq) returns (PatientPayment);
  rpc GetPaymentsByPatienId(GetPaymentReq) returns (GetPaymentsResp);
  rpc UpdatePayment(UpdatePaymentRequest) returns (PatientPayment);
  rpc DeletePayment(GetPaymentReq) returns (Status);
}

// Archive
service ArchiveService {
  rpc CreateArchive(CreateArchiveReq) returns (Archive);
  rpc GetArchive(GetArchiveReq) returns (Archive);
  rpc GetArchivesByPatientID(GetArchiveReq) returns (Archives);
  rpc UpdateArchive(UpdateArchiveRequest) returns (Archive);
  rpc DeleteArchive(GetArchiveReq) returns (Status);
}

// Uploaded files
service UploadedFileService {
  rpc UploadFile(CreateUploadedFile) returns (UploadedFile);
  rpc GetFileByPatientID(GetFileRequest) returns (UploadedFile);
  rpc GetFilesByPatientID(GetFileRequest) returns (UploadedFiles);
  rpc UpdateFile(UpdateFileRequest) returns (UploadedFile);
  rpc DeleteFile(GetFileRequest) returns (Status);
}

// Doctor notes
service DoctorNoteService {
  rpc CreateDoctorNote(CreateDoctorNoteReq) returns (DoctorNote);
  rpc GetDoctorNote(GetDoctorNoteReq) returns (DoctorNote);
  rpc GetDoctorNotesByPatienId(GetDoctorNoteReq) returns (DoctorNotes);
  rpc UpdateDoctorNote(UpdateDoctorNoteReq) returns (DoctorNote);
  rpc DeleteDoctorNote(GetDoctorNoteReq) returns (Status);
}


//PATIENT
//-------------------------------------------------------------

message GetPatientRequest {
  string id = 1;  
}

message GetPatientsRequest {
  string limit = 1;
  string page = 2;
}

message UpdatePatientRequest {
  string id = 1;
  PatientUpdate patient = 2;
}

message Status {
  bool status = 1;
}

message Patients {
  repeated Patient patient = 1;
}

message CreatePatientReq {
  string first_name = 2;
  string last_name = 3;
  string birth_date = 4;
  string gender = 5;
  string city = 6;
  string phone_number = 7;
}

message Patient {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string birth_date = 4;
  string gender = 5;
  string city = 6;
  string phone_number = 7;
  string create_at = 8;
  string update_at = 9;
}

message PatientUpdate {
  string first_name = 2;
  string last_name = 3;
  string birth_date = 4;
  string gender = 5;
  string city = 6;
  string phone_number = 7;
}

// DOCTOR'S AVAILABILiITY
//-------------------------------------------------------------
message CreateDoctorAvailabilitys {
  string id = 1;
  string doctor_id = 2;
  string department_id = 3;
  string availability_date = 4;
  string availability_time = 5;
  bool status = 6;
}

message DoctorAvailabilitys {
  repeated DoctorAvailability doctor_availability  = 1;
}

message GetDoctorAvailabilityById {
  string id = 1;
}

message UpdateDoctorAvailabilityById {
  string id = 1;
  UpdDoctorAvailability doctor_availability = 2;
}

message UpdDoctorAvailability {
  string availability_date = 1;
  string availability_time = 2;
  bool   status = 3;
}

message DoctorAvailability {
  string id = 1;
  string doctor_id = 2;
  string department_id = 3;
  string availability_date = 4;
  string availability_time = 5;
  bool   status = 6;
  string create_at = 7;
  string update_at = 8;
}

// BOOKED APOINTMENT
//-------------------------------------------------------------

  message CreateBookedAppointments {
    string id = 1;
    string department_id = 2;
    string doctor_id = 3;
    string patient_id = 4;
    string appointment_date = 5;
    string appointment_time = 6;
    string type = 7;
    string duration = 8;
    string expires_at = 9;
    string token = 10;
    bool   patient_status = 11;
    string status = 12;
  }

  message BookedAppointment {
    string  id = 1;
    string department_id = 2;
    string doctor_id = 3;
    string patient_id = 4;
    string appointment_date = 5;
    string appointment_time = 6;
    string type = 7;
    string duration = 8;
    string expires_at = 9;
    string token = 10;
    bool   patient_status = 11;
    string status = 12;
    string create_at = 13;
    string update_at = 14;
  }

message GetRequest {
  string id = 1;
}

message UpdRequest {
  string token = 1;
}

message UpdateBookedAppointment {
  string appointment_date = 1;
  string appointment_time = 2;
  string type = 3;
  string duration = 4;
  string expires_at = 5;
  string token = 6;
  bool   patient_status = 7;
  string status = 8;
}

message UpdateBookedAppointmentRequest {
  string id = 1;
  UpdateBookedAppointment booked_appointment = 2;
}


message GetBookedAppointments {
  repeated BookedAppointment booked_appointments = 1;
}
  
//PATIENTPAYMENT
//-------------------------------------------------------------

message PatientPayment {
  string id = 1;
  string appointment_id = 2;
  string patient_id = 3;
  string type = 4;
  float  amount = 5;
  string status = 6;
  bool   ispaid = 7;
  string create_at = 8;
  string update_at = 9;
}

message GetPaymentsResp {
  repeated PatientPayment patient_payment = 1;
}

message GetPaymentReq {
  string id = 1;
}

message UpdatePaymentRequest {
  string id = 1;
  PatientPayment payment = 2;
}

//ARCHIVE
//-------------------------------------------------------------

message CreateArchiveReq {
  string id = 1;
  string department_id = 2;
  string doctor_id = 3;
  string patient_id = 4;
  string patient_token = 5;
  string patient_problem = 6;
  string consultation_type = 7;
  string booked_date = 8;
  string booked_time = 9;
  string appointment_id = 10;
  string status = 11;
  int32 visits_count = 12;
}

message Archive {
  string id = 1;
  string department_id = 2;
  string doctor_id = 3;
  string patient_id = 4;
  string patient_token = 5;
  string patient_problem = 6;
  string consultation_type = 7;
  string booked_date = 8;
  string booked_time = 9;
  string appointment_id = 10;
  string status = 11;
  int32  visits_count = 12;
  string create_at = 13;
  string update_at = 14;
}

message UpdArchive {
  string patient_token = 1;
  string patient_problem = 2;
  string consultation_type = 3;
  string booked_date = 4;
  string booked_time = 5;
  string appointment_id = 6;
  string status = 7;
  int32 visits_count = 8;
}

message GetArchiveReq {
  string id = 1;
}
  
message Archives {
  repeated Archive archives = 1;
}

message UpdateArchiveRequest {
  string id = 1;
  UpdArchive archive = 2;
}
//-------------------------------------------------------------

//UPLOADED FILES
//-------------------------------------------------------------

message CreateUploadedFile {
  string file_id = 1;
  string patient_id = 2;
  string request_id = 3;
  bytes file = 4;
}

message UploadedFile {
  string file_id = 2;
  string patient_id = 3;
  string request_id = 4;
  bytes file = 5;
  string create_at = 6;
  string update_at = 7;
}

message UploadedFiles {
  repeated UploadedFile uploaded = 1;
}

 message GetFileRequest {
  string file_id = 1;
}

message UpdateFileRequest {
  string file_id = 1;
  UploadedFile uploaded_file = 2;
}

// DOCTOR NOTES
//-------------------------------------------------------------
message CreateDoctorNoteReq {
  string id = 1;
  string appointment_id = 2;
  string doctor_id = 3;
  string patient_id = 4;
  string note_type = 5;
  string note_text = 6;
}

message DoctorNote {
  string id = 1;
  string appointment_id = 2;
  string doctor_id = 3;
  string patient_id = 4;
  string note_type = 5;
  string note_text = 6;
  string create_at = 7;
  string update_at = 8;
}

message DoctorNotes {
  repeated DoctorNote doctor_note = 1;
}

message GetDoctorNoteReq {
  string id = 1;
}

message UpdDoctorNote {
  string note_type = 5;
  string note_text = 6;
}

message UpdateDoctorNoteReq {
  string id = 1;
  UpdDoctorNote doctor_note = 2;
}

//-------------------------------------------------------------
